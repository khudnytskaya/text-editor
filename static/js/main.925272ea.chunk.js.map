{"version":3,"sources":["components/Editor/CustomToolBar.jsx","components/Editor/TextEditor.jsx","components/app/app.jsx","index.js"],"names":["CustomToolbar","id","className","defaultValue","value","Size","Quill","import","whitelist","register","Font","TextEditor","state","editorHtml","descriptionTable","text","fontSize","color","background","handleChange","html","setState","handleClick","input","document","getElementById","span","getElementsByTagName","length","i","styleInput","getComputedStyle","textContent","backgroundColor","console","log","JSON","stringify","this","onChange","placeholder","props","modules","formats","onClick","React","Component","toolbar","container","App","ReactDOM","render"],"mappings":"sMA4BiBA,G,aAzBK,kBAClB,yBAAKC,GAAG,UAAUC,UAAU,iBAC1B,4BAAQA,UAAU,UAAUC,aAAc,SACxC,4BAAQC,MAAM,SAAd,SACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,UAAd,WAEF,4BAAQF,UAAU,UAAUC,aAAc,UACxC,4BAAQC,MAAM,eAAd,QACA,4BAAQA,MAAM,SAAd,QACA,4BAAQA,MAAM,UAAd,QACA,4BAAQA,MAAM,UAAd,QACA,4BAAQA,MAAM,SAAd,QACA,4BAAQA,MAAM,QAAd,SAEF,4BAAQF,UAAU,aAClB,4BAAQA,UAAU,aAClB,4BAAQA,UAAU,kBAClB,4BAAQA,UAAU,gB,SCflBG,G,OAAOC,QAAMC,OAAO,iBAC1BF,EAAKG,UAAY,CAAC,cAAe,QAAS,SAAU,SAAU,QAAS,QACvEF,QAAMG,SAASJ,GAAM,GAErB,IAAMK,EAAOJ,QAAMC,OAAO,gBAC1BG,EAAKF,UAAY,CACb,QACA,aACA,cACA,UACA,YACA,UAEJF,QAAMG,SAASC,GAAM,G,IAGAC,E,4MACjBC,MAAQ,CACJC,WAAY,GACZC,iBAAkB,CACd,CACAC,KAAM,GACNC,SAAU,OACVC,MAAO,sBACPC,WAAY,sB,EAKpBC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAER,WAAYO,K,EAmBhCE,YAAc,WACV,IAAMC,EAAQC,SAASC,eAAe,SAChCC,EAAOH,EAAMI,qBAAqB,QACxC,GAAID,EAAKE,OAAS,EACd,IADkB,IAAD,WACRC,GACL,IAAMC,EAAaC,iBAAiBL,EAAKG,IACrCN,EAAMS,YAAYJ,OAAS,GAC3B,EAAKP,UAAS,SAACT,GACX,OAAO,2BACAA,GADP,IAEIE,iBAAmB,CACfC,KAAMQ,EAAMS,YACZhB,SAAUc,EAAWd,SACrBC,MAAOa,EAAWb,MAClBC,WAAYY,EAAWG,sBAGhC,WACCC,QAAQC,IAAIC,KAAKC,UAAUC,KAAK1B,MAAME,uBAdzCe,EAAI,EAAGA,EAAIH,EAAKE,OAAQC,IAAM,EAA9BA,QAmBT,EAAKR,UAAS,SAACT,GACX,OAAO,2BACAA,GADP,IAEIE,iBAAiB,2BACVF,EAAME,kBADG,IAEZC,KAAMQ,EAAMS,mBAGrB,WACCE,QAAQC,IAAIC,KAAKC,UAAUC,KAAK1B,MAAME,uB,uDAO9C,OACI,yBAAKZ,UAAU,eACX,wBAAIA,UAAU,QAAd,eACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CACID,GAAG,QACHG,MAAOkC,KAAK1B,MAAMC,WAClB0B,SAAUD,KAAKnB,aACfqB,YAAaF,KAAKG,MAAMD,YACxBE,QAAS/B,EAAW+B,QACpBC,QAAShC,EAAWgC,UAExB,kBAAC,IAAD,CACIzC,UAAU,cACV0C,QAASN,KAAKhB,aAFlB,wB,GApFwBuB,IAAMC,WAAzBnC,EAiBV+B,QAAU,CACbK,QAAS,CACLC,UAAW,aAnBFrC,EAuBVgC,QAAU,CACb,SACA,OACA,OACA,QACA,SACA,QACA,cCpDR,IAQeM,EARH,WACV,OACE,6BACE,kBAAC,EAAD,CAAYT,YAAa,wBCF/BU,IAASC,OAAQ,kBACf,EADe,MAEf3B,SAASC,eAAe,U","file":"static/js/main.925272ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TextEditor.css\";\r\n\r\nconst CustomToolbar = () => (\r\n    <div id=\"toolbar\" className=\"toolbar-panel\">\r\n      <select className=\"ql-font\" defaultValue={\"arial\"}>\r\n        <option value=\"arial\">Arial</option>\r\n        <option value=\"comic-sans\">Comic Sans</option>\r\n        <option value=\"courier-new\">Courier New</option>\r\n        <option value=\"georgia\">Georgia</option>\r\n        <option value=\"helvetica\">Helvetica</option>\r\n        <option value=\"lucida\">Lucida</option>\r\n      </select>\r\n      <select className=\"ql-size\" defaultValue={\"medium\"}>\r\n        <option value=\"extra-small\">12px</option>\r\n        <option value=\"small\">14px</option>\r\n        <option value=\"small2\">16px</option>\r\n        <option value=\"medium\">18px</option>\r\n        <option value=\"large\">20px</option>\r\n        <option value=\"huge\">22px</option>\r\n      </select>\r\n      <select className=\"ql-align\" />\r\n      <select className=\"ql-color\" />\r\n      <select className=\"ql-background\" />\r\n      <button className=\"ql-clean\" />\r\n    </div>\r\n  );\r\n\r\n  export default CustomToolbar;","import React from \"react\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./TextEditor.css\";\r\nimport CustomToolbar from \"./CustomToolBar\";\r\nimport { Button } from \"antd\";\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nconst Size = Quill.import(\"formats/size\");\r\nSize.whitelist = [\"extra-small\", \"small\", \"small2\", \"medium\", \"large\", \"huge\"];\r\nQuill.register(Size, true);\r\n\r\nconst Font = Quill.import(\"formats/font\");\r\nFont.whitelist = [\r\n    \"arial\",\r\n    \"comic-sans\",\r\n    \"courier-new\",\r\n    \"georgia\",\r\n    \"helvetica\",\r\n    \"lucida\"\r\n];\r\nQuill.register(Font, true);\r\n\r\n\r\nexport default class TextEditor extends React.Component {\r\n    state = {\r\n        editorHtml: \"\",\r\n        descriptionTable: [\r\n            {\r\n            text: \"\",\r\n            fontSize: \"13px\",\r\n            color: \"rgba(0, 0, 0, 0.85)\",\r\n            background: \"rgba(0, 0, 0, 0)\"\r\n        }\r\n    ]\r\n    };\r\n\r\n    handleChange = html => {\r\n        this.setState({ editorHtml: html });\r\n    };\r\n\r\n    static modules = {\r\n        toolbar: {\r\n            container: \"#toolbar\"\r\n        }\r\n    };\r\n\r\n    static formats = [\r\n        \"header\",\r\n        \"font\",\r\n        \"size\",\r\n        \"align\",\r\n        \"strike\",\r\n        \"color\",\r\n        \"background\"\r\n    ];\r\n\r\n    handleClick = () => {\r\n        const input = document.getElementById('input');\r\n        const span = input.getElementsByTagName('span');\r\n        if (span.length > 0) {\r\n            for (let i = 0; i < span.length; i++) {\r\n                const styleInput = getComputedStyle(span[i]);\r\n                if (input.textContent.length > 0) {\r\n                    this.setState((state) => {\r\n                        return {\r\n                            ...state,\r\n                            descriptionTable : {\r\n                                text: input.textContent,\r\n                                fontSize: styleInput.fontSize,\r\n                                color: styleInput.color,\r\n                                background: styleInput.backgroundColor\r\n                            }\r\n                        }\r\n                    }, function(){\r\n                        console.log(JSON.stringify(this.state.descriptionTable));\r\n                    })\r\n                }\r\n            }\r\n        } else {\r\n            this.setState((state) => {\r\n                return {\r\n                    ...state,\r\n                    descriptionTable: {\r\n                        ...state.descriptionTable,\r\n                        text: input.textContent\r\n                    }\r\n                }\r\n            }, function(){\r\n                console.log(JSON.stringify(this.state.descriptionTable));\r\n            })\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-editor\">\r\n                <h2 className=\"text\">Text Editor</h2>\r\n                <CustomToolbar />\r\n                <ReactQuill\r\n                    id='input'\r\n                    value={this.state.editorHtml}\r\n                    onChange={this.handleChange}\r\n                    placeholder={this.props.placeholder}\r\n                    modules={TextEditor.modules}\r\n                    formats={TextEditor.formats}\r\n                />\r\n                <Button\r\n                    className=\"button-json\"\r\n                    onClick={this.handleClick}\r\n                >Convert to JSON</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport TextEditor from '../Editor/TextEditor';\n\nconst App = () => {\n  return (\n    <div>\n      <TextEditor placeholder={\"Write something..\"} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\n\nReactDOM.render( <\n  App / > ,\n  document.getElementById('root')\n);"],"sourceRoot":""}